// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PandaShoppingAPI.DataAccesses.EF;

#nullable disable

namespace PandaShoppingAPI.Migrations
{
    [DbContext(typeof(EcommerceDBContext))]
    [Migration("20240423071550_Update_Cart_Set-default-isDeleted")]
    partial class Update_Cart_SetdefaultisDeleted
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Address", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("communeOrWard")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("district")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("districtCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("provinceOrCity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("provinceOrCityCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("streetAndHouseNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "userId" }, "IX_Address_userId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Cart", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("id");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.CartDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("cartId")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("productNum")
                        .HasColumnType("int");

                    b.Property<int>("productOptionId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "cartId" }, "IX_CartDetail_cartId");

                    b.HasIndex(new[] { "productOptionId" }, "IX_CartDetail_productOptionId");

                    b.ToTable("CartDetail");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("imageId")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("parentId")
                        .HasColumnType("int");

                    b.Property<int?>("templateId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "imageId" }, "IX_Category_imageId");

                    b.HasIndex(new[] { "parentId" }, "IX_Category_parentId");

                    b.HasIndex(new[] { "templateId" }, "IX_Category_templateId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Delivery", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("addressId")
                        .HasColumnType("int");

                    b.Property<int>("deliveryMethodId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("finishedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("startedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "addressId" }, "IX_Delivery_addressId");

                    b.HasIndex(new[] { "deliveryMethodId" }, "IX_Delivery_deliveryMethodId");

                    b.ToTable("Delivery");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.DeliveryMethod", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("maxDeliveryHours")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("DeliveryMethod");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.DeliveryPartner", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("DeliveryPartner");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Feedback", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("content")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("parentId")
                        .HasColumnType("int");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<double?>("starNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "parentId" }, "IX_Feedback_parentId");

                    b.HasIndex(new[] { "productId" }, "IX_Feedback_productId");

                    b.HasIndex(new[] { "userId" }, "IX_Feedback_userId");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Image", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("fileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("id");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Invoice", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime?>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("orderId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "orderId" }, "IX_Invoice_orderId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Order_", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime?>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("paymentMethodId")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "paymentMethodId" }, "IX_Order__paymentMethodId");

                    b.HasIndex(new[] { "userId" }, "IX_Order__userId");

                    b.ToTable("Order_");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.PaymentMethod", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("PaymentMethod");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Permission", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool?>("canRead")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("canWrite")
                        .HasColumnType("bit");

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("resourceId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "resourceId" }, "IX_Permission_resourceId");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("addressId")
                        .HasColumnType("int");

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("remainingNum")
                        .HasColumnType("int");

                    b.Property<int>("sellingNum")
                        .HasColumnType("int");

                    b.Property<int>("shopId")
                        .HasColumnType("int");

                    b.Property<double>("starNum")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex(new[] { "addressId" }, "IX_Product_addressId");

                    b.HasIndex(new[] { "categoryId" }, "IX_Product_categoryId");

                    b.HasIndex(new[] { "shopId" }, "IX_Product_shopId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.ProductBatch", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime?>("arriveDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("expireDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("manufactureDate")
                        .HasColumnType("datetime");

                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.Property<int>("productOptionId")
                        .HasColumnType("int");

                    b.Property<int>("warehouseInputId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "productOptionId" }, "IX_ProductBatch_productOptionId");

                    b.HasIndex(new[] { "warehouseInputId" }, "IX_ProductBatch_warehouseInputId");

                    b.ToTable("ProductBatch");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.ProductBatchInventory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("productBatchId")
                        .HasColumnType("int");

                    b.Property<int>("remainingNumber")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "productBatchId" }, "IX_ProductBatchInventory_productBatchId");

                    b.ToTable("ProductBatchInventory");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.ProductDeliveryMethod", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("deliveryMethodId")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "deliveryMethodId" }, "IX_ProductDeliveryMethod_deliveryMethodId");

                    b.HasIndex(new[] { "productId" }, "IX_ProductDeliveryMethod_productId");

                    b.ToTable("ProductDeliveryMethod");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.ProductImage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("imageId")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "imageId" }, "IX_ProductImage_imageId");

                    b.HasIndex(new[] { "productId" }, "IX_ProductImage_productId");

                    b.ToTable("ProductImage");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.ProductOption", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("price")
                        .HasColumnType("money");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "productId" }, "IX_ProductOption_productId");

                    b.ToTable("ProductOption");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.ProductOptionImage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("imageId")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("productOptionId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "imageId" }, "IX_ProductOptionImage_imageId");

                    b.HasIndex(new[] { "productOptionId" }, "IX_ProductOptionImage_productOptionId");

                    b.ToTable("ProductOptionImage");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.ProductOptionValue", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("productOptionId")
                        .HasColumnType("int");

                    b.Property<int>("propertyId")
                        .HasColumnType("int");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("id");

                    b.HasIndex(new[] { "productOptionId" }, "IX_ProductOptionValue_productOptionId");

                    b.HasIndex(new[] { "propertyId" }, "IX_ProductOptionValue_propertyId");

                    b.ToTable("ProductOptionValue");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.ProductPropertyValue", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int>("propertyId")
                        .HasColumnType("int");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("id");

                    b.HasIndex(new[] { "productId" }, "IX_ProductPropertyValue_productId");

                    b.HasIndex(new[] { "propertyId" }, "IX_ProductPropertyValue_propertyId");

                    b.ToTable("ProductPropertyValue");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Property", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("secondaryId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("id");

                    b.HasIndex(new[] { "secondaryId" }, "UQ__Property__2D08ACCF5EA3BA00")
                        .IsUnique()
                        .HasFilter("([secondaryId] IS NOT NULL)");

                    b.HasIndex(new[] { "secondaryId" }, "UQ__Property__2D08ACCF6D2F21AB")
                        .IsUnique()
                        .HasFilter("([secondaryId] IS NOT NULL)");

                    b.ToTable("Property");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.PropertyTemplate", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool?>("isRequired")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("orderIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("propertyId")
                        .HasColumnType("int");

                    b.Property<int>("templateId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "propertyId" }, "IX_PropertyTemplate_propertyId");

                    b.HasIndex(new[] { "templateId" }, "IX_PropertyTemplate_templateId");

                    b.ToTable("PropertyTemplate");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.PropertyTemplateValue", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("propertyTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("id");

                    b.HasIndex(new[] { "propertyTemplateId" }, "IX_PropertyTemplateValue_propertyTemplateId");

                    b.ToTable("PropertyTemplateValue");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Resource", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Resource");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Role", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Shop", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Shop");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.SubOrder", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("deliveryId")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("orderId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "deliveryId" }, "IX_SubOrder_deliveryId");

                    b.HasIndex(new[] { "orderId" }, "IX_SubOrder_orderId");

                    b.ToTable("SubOrder");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.SubOrderDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime?>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double?>("discountPercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<decimal>("price")
                        .HasColumnType("money");

                    b.Property<int>("productNum")
                        .HasColumnType("int");

                    b.Property<int>("productOptionId")
                        .HasColumnType("int");

                    b.Property<int>("subOrderId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "productOptionId" }, "IX_SubOrderDetail_productOptionId");

                    b.HasIndex(new[] { "subOrderId" }, "IX_SubOrderDetail_subOrderId");

                    b.ToTable("SubOrderDetail");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Template", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("id");

                    b.ToTable("Template");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.User_", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("cartId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("shopId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("id");

                    b.HasIndex(new[] { "cartId" }, "IX_User__cartId");

                    b.HasIndex(new[] { "shopId" }, "IX_User__shopId");

                    b.ToTable("User_");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.UserRole", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("roleId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "roleId" }, "IX_UserRole_roleId");

                    b.HasIndex(new[] { "userId" }, "IX_UserRole_userId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Warehouse", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("addressId")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("shopId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "addressId" }, "IX_Warehouse_addressId");

                    b.HasIndex(new[] { "shopId" }, "IX_Warehouse_shopId");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.WarehouseInput", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime");

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("warehouseId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "warehouseId" }, "IX_WarehouseInput_warehouseId");

                    b.ToTable("WarehouseInput");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.WarehouseOutput", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime");

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("id");

                    b.ToTable("WarehouseOutput");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.WarehouseOutputDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("isDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.Property<int>("productBatchId")
                        .HasColumnType("int");

                    b.Property<int>("warehouseOutputId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "productBatchId" }, "IX_WarehouseOutputDetail_productBatchId");

                    b.HasIndex(new[] { "warehouseOutputId" }, "IX_WarehouseOutputDetail_warehouseOutputId");

                    b.ToTable("WarehouseOutputDetail");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Address", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.User_", "user")
                        .WithMany("Address")
                        .HasForeignKey("userId")
                        .HasConstraintName("FK_Address_User");

                    b.Navigation("user");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.CartDetail", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Cart", "cart")
                        .WithMany("CartDetail")
                        .HasForeignKey("cartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CartDetail_Cart");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.ProductOption", "productOption")
                        .WithMany("CartDetail")
                        .HasForeignKey("productOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CartDetail_ProductOption");

                    b.Navigation("cart");

                    b.Navigation("productOption");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Category", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Image", "image")
                        .WithMany("Category")
                        .HasForeignKey("imageId")
                        .HasConstraintName("FK_Category_Image");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Category", "parent")
                        .WithMany("Inverseparent")
                        .HasForeignKey("parentId")
                        .HasConstraintName("FK_Category_Category");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Template", "template")
                        .WithMany("Category")
                        .HasForeignKey("templateId")
                        .HasConstraintName("FK_Category_Template");

                    b.Navigation("image");

                    b.Navigation("parent");

                    b.Navigation("template");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Delivery", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Address", "address")
                        .WithMany("Delivery")
                        .HasForeignKey("addressId")
                        .IsRequired()
                        .HasConstraintName("FK_Delivery_Address");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.DeliveryMethod", "deliveryMethod")
                        .WithMany("Delivery")
                        .HasForeignKey("deliveryMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Delivery_DeliveryPartner");

                    b.Navigation("address");

                    b.Navigation("deliveryMethod");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Feedback", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Feedback", "parent")
                        .WithMany("Inverseparent")
                        .HasForeignKey("parentId")
                        .IsRequired()
                        .HasConstraintName("FK_Feedback_Feedback");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Product", "product")
                        .WithMany("Feedback")
                        .HasForeignKey("productId")
                        .IsRequired()
                        .HasConstraintName("FK_Feedback_Product");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.User_", "user")
                        .WithMany("Feedback")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Feedback_User");

                    b.Navigation("parent");

                    b.Navigation("product");

                    b.Navigation("user");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Invoice", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Order_", "order")
                        .WithMany("Invoice")
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Invoice_Order");

                    b.Navigation("order");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Order_", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.PaymentMethod", "paymentMethod")
                        .WithMany("Order_")
                        .HasForeignKey("paymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Order_PaymentMethod");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.User_", "user")
                        .WithMany("Order_")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Order_User");

                    b.Navigation("paymentMethod");

                    b.Navigation("user");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Permission", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Resource", "resource")
                        .WithMany("Permission")
                        .HasForeignKey("resourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Permission_Resource");

                    b.Navigation("resource");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Product", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Address", "address")
                        .WithMany("Product")
                        .HasForeignKey("addressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Product_Address");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Category", "category")
                        .WithMany("Product")
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Product_Category");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Shop", "shop")
                        .WithMany("Product")
                        .HasForeignKey("shopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Product_Shop");

                    b.Navigation("address");

                    b.Navigation("category");

                    b.Navigation("shop");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.ProductBatch", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.ProductOption", "productOption")
                        .WithMany("ProductBatch")
                        .HasForeignKey("productOptionId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductBatch_ProductOption");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.WarehouseInput", "warehouseInput")
                        .WithMany("ProductBatch")
                        .HasForeignKey("warehouseInputId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductBatch_WarehouseInput");

                    b.Navigation("productOption");

                    b.Navigation("warehouseInput");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.ProductBatchInventory", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.ProductBatch", "productBatch")
                        .WithMany("ProductBatchInventory")
                        .HasForeignKey("productBatchId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductBatchInventory_ProductBatch");

                    b.Navigation("productBatch");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.ProductDeliveryMethod", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.DeliveryMethod", "deliveryMethod")
                        .WithMany("ProductDeliveryMethod")
                        .HasForeignKey("deliveryMethodId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductDeliveryMethod_DeliveryMethod");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Product", "product")
                        .WithMany("ProductDeliveryMethod")
                        .HasForeignKey("productId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductDeliveryMethod_Product");

                    b.Navigation("deliveryMethod");

                    b.Navigation("product");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.ProductImage", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Image", "image")
                        .WithMany("ProductImage")
                        .HasForeignKey("imageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductImage_Image");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Product", "product")
                        .WithMany("ProductImage")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductImage_Product");

                    b.Navigation("image");

                    b.Navigation("product");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.ProductOption", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Product", "product")
                        .WithMany("ProductOption")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductOption_Product");

                    b.Navigation("product");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.ProductOptionImage", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Image", "image")
                        .WithMany("ProductOptionImage")
                        .HasForeignKey("imageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductOptionImage_Image");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.ProductOption", "productOption")
                        .WithMany("ProductOptionImage")
                        .HasForeignKey("productOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductOptionImage_ProductOption");

                    b.Navigation("image");

                    b.Navigation("productOption");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.ProductOptionValue", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.ProductOption", "productOption")
                        .WithMany("ProductOptionValue")
                        .HasForeignKey("productOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductOptionValue_ProductOption");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Property", "property")
                        .WithMany("ProductOptionValue")
                        .HasForeignKey("propertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductOptionValue_Property");

                    b.Navigation("productOption");

                    b.Navigation("property");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.ProductPropertyValue", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Product", "product")
                        .WithMany("ProductPropertyValue")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductPropertyValue_Product");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Property", "property")
                        .WithMany("ProductPropertyValue")
                        .HasForeignKey("propertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductPropertyValue_Property");

                    b.Navigation("product");

                    b.Navigation("property");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.PropertyTemplate", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Property", "property")
                        .WithMany("PropertyTemplate")
                        .HasForeignKey("propertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PropertyTemplate_Property");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Template", "template")
                        .WithMany("PropertyTemplate")
                        .HasForeignKey("templateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PropertyTemplate_Template");

                    b.Navigation("property");

                    b.Navigation("template");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.PropertyTemplateValue", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.PropertyTemplate", "propertyTemplate")
                        .WithMany("PropertyTemplateValue")
                        .HasForeignKey("propertyTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PropertyTemplateValue_PropertyTemplate");

                    b.Navigation("propertyTemplate");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.SubOrder", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Delivery", "delivery")
                        .WithMany("SubOrder")
                        .HasForeignKey("deliveryId")
                        .IsRequired()
                        .HasConstraintName("FK_SubOrder_Delivery");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Order_", "order")
                        .WithMany("SubOrder")
                        .HasForeignKey("orderId")
                        .IsRequired()
                        .HasConstraintName("FK_SubOrder_Order");

                    b.Navigation("delivery");

                    b.Navigation("order");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.SubOrderDetail", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.ProductOption", "productOption")
                        .WithMany("SubOrderDetail")
                        .HasForeignKey("productOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_OrderDetail_ProductOption");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.SubOrder", "subOrder")
                        .WithMany("SubOrderDetail")
                        .HasForeignKey("subOrderId")
                        .IsRequired()
                        .HasConstraintName("FK_SubOrderDetail_SubOrder");

                    b.Navigation("productOption");

                    b.Navigation("subOrder");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.User_", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Cart", "cart")
                        .WithMany("User_")
                        .HasForeignKey("cartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_User_Cart");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Shop", "shop")
                        .WithMany("User_")
                        .HasForeignKey("shopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_User_Shop");

                    b.Navigation("cart");

                    b.Navigation("shop");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.UserRole", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Role", "role")
                        .WithMany("UserRole")
                        .HasForeignKey("roleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UserRole_Role");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.User_", "user")
                        .WithMany("UserRole")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UserRole_User");

                    b.Navigation("role");

                    b.Navigation("user");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Warehouse", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Address", "address")
                        .WithMany("Warehouse")
                        .HasForeignKey("addressId")
                        .IsRequired()
                        .HasConstraintName("FK_Warehouse_Address");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Shop", "shop")
                        .WithMany("Warehouse")
                        .HasForeignKey("shopId")
                        .IsRequired()
                        .HasConstraintName("FK_Warehouse_Shop");

                    b.Navigation("address");

                    b.Navigation("shop");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.WarehouseInput", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.Warehouse", "warehouse")
                        .WithMany("WarehouseInput")
                        .HasForeignKey("warehouseId")
                        .IsRequired()
                        .HasConstraintName("FK_WarehouseInput_Warehouse");

                    b.Navigation("warehouse");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.WarehouseOutputDetail", b =>
                {
                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.ProductBatch", "productBatch")
                        .WithMany("WarehouseOutputDetail")
                        .HasForeignKey("productBatchId")
                        .IsRequired()
                        .HasConstraintName("FK_WarehouseOutputDetail_ProductBatch");

                    b.HasOne("PandaShoppingAPI.DataAccesses.EF.WarehouseOutput", "warehouseOutput")
                        .WithMany("WarehouseOutputDetail")
                        .HasForeignKey("warehouseOutputId")
                        .IsRequired()
                        .HasConstraintName("FK_WarehouseOutputDetail_WarehouseOutput");

                    b.Navigation("productBatch");

                    b.Navigation("warehouseOutput");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Address", b =>
                {
                    b.Navigation("Delivery");

                    b.Navigation("Product");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Cart", b =>
                {
                    b.Navigation("CartDetail");

                    b.Navigation("User_");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Category", b =>
                {
                    b.Navigation("Inverseparent");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Delivery", b =>
                {
                    b.Navigation("SubOrder");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.DeliveryMethod", b =>
                {
                    b.Navigation("Delivery");

                    b.Navigation("ProductDeliveryMethod");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Feedback", b =>
                {
                    b.Navigation("Inverseparent");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Image", b =>
                {
                    b.Navigation("Category");

                    b.Navigation("ProductImage");

                    b.Navigation("ProductOptionImage");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Order_", b =>
                {
                    b.Navigation("Invoice");

                    b.Navigation("SubOrder");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.PaymentMethod", b =>
                {
                    b.Navigation("Order_");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Product", b =>
                {
                    b.Navigation("Feedback");

                    b.Navigation("ProductDeliveryMethod");

                    b.Navigation("ProductImage");

                    b.Navigation("ProductOption");

                    b.Navigation("ProductPropertyValue");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.ProductBatch", b =>
                {
                    b.Navigation("ProductBatchInventory");

                    b.Navigation("WarehouseOutputDetail");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.ProductOption", b =>
                {
                    b.Navigation("CartDetail");

                    b.Navigation("ProductBatch");

                    b.Navigation("ProductOptionImage");

                    b.Navigation("ProductOptionValue");

                    b.Navigation("SubOrderDetail");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Property", b =>
                {
                    b.Navigation("ProductOptionValue");

                    b.Navigation("ProductPropertyValue");

                    b.Navigation("PropertyTemplate");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.PropertyTemplate", b =>
                {
                    b.Navigation("PropertyTemplateValue");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Resource", b =>
                {
                    b.Navigation("Permission");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Role", b =>
                {
                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Shop", b =>
                {
                    b.Navigation("Product");

                    b.Navigation("User_");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.SubOrder", b =>
                {
                    b.Navigation("SubOrderDetail");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Template", b =>
                {
                    b.Navigation("Category");

                    b.Navigation("PropertyTemplate");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.User_", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Feedback");

                    b.Navigation("Order_");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.Warehouse", b =>
                {
                    b.Navigation("WarehouseInput");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.WarehouseInput", b =>
                {
                    b.Navigation("ProductBatch");
                });

            modelBuilder.Entity("PandaShoppingAPI.DataAccesses.EF.WarehouseOutput", b =>
                {
                    b.Navigation("WarehouseOutputDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
